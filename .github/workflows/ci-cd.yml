name: CI/CD for Spring Boot Hello World

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: cd demo && mvn clean package

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to ACR
        env:
          DOCKER_USERNAME: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
          REGISTRY_URL: ${{ secrets.ALIYUN_REGISTRY_URL }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login "$REGISTRY_URL" -u "$DOCKER_USERNAME" --password-stdin

      - name: Build and Push Docker image
        working-directory: demo
        env:
          REGISTRY_URL: ${{ secrets.ALIYUN_REGISTRY_URL }}
          NAMESPACE: ${{ secrets.ALIYUN_NAMESPACE }}
          REPO_NAME: ${{ secrets.ALIYUN_REPO_NAME }}
        run: |
          # 构建本地镜像
          docker build -t springboot-hello-world:latest .
          
          # 打标签
          docker tag springboot-hello-world:latest "$REGISTRY_URL/$NAMESPACE/$REPO_NAME:latest"
          
          # 推送镜像
          docker push "$REGISTRY_URL/$NAMESPACE/$REPO_NAME:latest"

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.ALIYUN_KUBECONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Deploy to Kubernetes
        env:
          REGISTRY_URL: ${{ secrets.ALIYUN_REGISTRY_URL }}
          NAMESPACE: ${{ secrets.ALIYUN_NAMESPACE }}
          REPO_NAME: ${{ secrets.ALIYUN_REPO_NAME }}
        run: |
          kubectl set image deployment/springboot-hello-world springboot-hello-world="$REGISTRY_URL/$NAMESPACE/$REPO_NAME:latest"

